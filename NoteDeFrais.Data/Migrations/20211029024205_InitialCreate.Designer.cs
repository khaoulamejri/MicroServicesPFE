// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteDeFrais.Data;

namespace NoteDeFrais.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211029024205_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.CompteComptable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompteComptable");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.DemandeConge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebutConge")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRepriseConge")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeIDConsumed")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DemandeConge");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Depenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDepense")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeviseIDConsumed")
                        .HasColumnType("int");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<bool>("Facturable")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MoyenPaiementID")
                        .HasColumnType("int");

                    b.Property<int?>("NotesFraisID")
                        .HasColumnType("int");

                    b.Property<int?>("PaysIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("Reference2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TTC")
                        .HasColumnType("real");

                    b.Property<float>("TVA")
                        .HasColumnType("real");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalRemboursable")
                        .HasColumnType("real");

                    b.Property<int?>("TypeDepenseID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Warning")
                        .HasColumnType("bit");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MoyenPaiementID");

                    b.HasIndex("NotesFraisID");

                    b.HasIndex("TypeDepenseID");

                    b.ToTable("Depenses");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Devise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Decimal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Devise");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.DocumentsDepenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepensesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepensesId");

                    b.ToTable("DocumentsDepenses");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.DocumentsNoteFrais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotesFraisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotesFraisId");

                    b.ToTable("DocumentsNoteFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConsultantExterne")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDateCin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Langue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPersonne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceCin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanDroitCongeIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecruitementDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RegimeTravailID")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelGSM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TitularizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidityDateRP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.EmployeeGroupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAffectation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFinAffectation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeIDConsumed")
                        .HasColumnType("int");

                    b.Property<int>("GroupeFraisID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupeFraisID");

                    b.ToTable("EmployeeGroupe");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.FraisKilometriques", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arrivee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArriveeMaps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartMaps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DistanceParcourue")
                        .HasColumnType("real");

                    b.Property<float>("DistanceParcouruetotal")
                        .HasColumnType("real");

                    b.Property<float>("NombreTrajets")
                        .HasColumnType("real");

                    b.Property<int?>("NotesFraisId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalRemboursable")
                        .HasColumnType("real");

                    b.Property<float>("TotalTTC")
                        .HasColumnType("real");

                    b.Property<bool>("TypeVehicule")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotesFraisId");

                    b.ToTable("FraisKilometriques");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.GroupeFrais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PrixUPerso")
                        .HasColumnType("real");

                    b.Property<float?>("PrixUPro")
                        .HasColumnType("real");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroupeFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.GroupeFraisDepense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<float>("Forfait")
                        .HasColumnType("real");

                    b.Property<int>("GroupeFraisID")
                        .HasColumnType("int");

                    b.Property<float>("Plafond")
                        .HasColumnType("real");

                    b.Property<int>("TypeDepenseID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupeFraisID");

                    b.HasIndex("TypeDepenseID");

                    b.ToTable("GroupeFraisDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.MoyenPaiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MoyenPaiement");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.NotesFrais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateNote")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("NumeroNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdreMissionId")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<float>("TotalKm")
                        .HasColumnType("real");

                    b.Property<float>("TotalRembourser")
                        .HasColumnType("real");

                    b.Property<float>("TotalTTC")
                        .HasColumnType("real");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Validateur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdreMissionId");

                    b.ToTable("NotesFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.OrdreMission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("NumeroOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaysIdConsumed")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeMissionOrderId")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeMissionOrderId");

                    b.ToTable("OrdreMission");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Pays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pay");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.TypeDepense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompteComptableID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TVA")
                        .HasColumnType("real");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompteComptableID");

                    b.ToTable("TypeDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.TypeOrdreMission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAbroad")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeOrdreMission");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.WFDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AffectedToId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<string>("TypeDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WFDocument");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Depenses", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.MoyenPaiement", "MoyenPaiement")
                        .WithMany("Depenses")
                        .HasForeignKey("MoyenPaiementID");

                    b.HasOne("NoteDeFrais.Domain.Entities.NotesFrais", "NotesFrais")
                        .WithMany("Depenses")
                        .HasForeignKey("NotesFraisID");

                    b.HasOne("NoteDeFrais.Domain.Entities.TypeDepense", "TypeDepense")
                        .WithMany("Depenses")
                        .HasForeignKey("TypeDepenseID");

                    b.Navigation("MoyenPaiement");

                    b.Navigation("NotesFrais");

                    b.Navigation("TypeDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.DocumentsDepenses", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.Depenses", "Depenses")
                        .WithMany("DocumentsDepenses")
                        .HasForeignKey("DepensesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depenses");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.DocumentsNoteFrais", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.NotesFrais", "NotesFrais")
                        .WithMany("DocumentsNoteFrais")
                        .HasForeignKey("NotesFraisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotesFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.EmployeeGroupe", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.GroupeFrais", "GroupeFrais")
                        .WithMany("EmployeeGroupe")
                        .HasForeignKey("GroupeFraisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupeFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.FraisKilometriques", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.NotesFrais", "NotesFrais")
                        .WithMany("FraisKilometriques")
                        .HasForeignKey("NotesFraisId");

                    b.Navigation("NotesFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.GroupeFraisDepense", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.GroupeFrais", "GroupeFrais")
                        .WithMany("GroupeFraisDepense")
                        .HasForeignKey("GroupeFraisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoteDeFrais.Domain.Entities.TypeDepense", "TypeDepense")
                        .WithMany("GroupeFraisDepense")
                        .HasForeignKey("TypeDepenseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupeFrais");

                    b.Navigation("TypeDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.NotesFrais", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.OrdreMission", "OrdreMission")
                        .WithMany("NotesFrais")
                        .HasForeignKey("OrdreMissionId");

                    b.Navigation("OrdreMission");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.OrdreMission", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.TypeOrdreMission", "typeOrdreMission")
                        .WithMany("OrdreMission")
                        .HasForeignKey("TypeMissionOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typeOrdreMission");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.TypeDepense", b =>
                {
                    b.HasOne("NoteDeFrais.Domain.Entities.CompteComptable", "CompteComptable")
                        .WithMany("TypeDepense")
                        .HasForeignKey("CompteComptableID");

                    b.Navigation("CompteComptable");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.CompteComptable", b =>
                {
                    b.Navigation("TypeDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.Depenses", b =>
                {
                    b.Navigation("DocumentsDepenses");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.GroupeFrais", b =>
                {
                    b.Navigation("EmployeeGroupe");

                    b.Navigation("GroupeFraisDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.MoyenPaiement", b =>
                {
                    b.Navigation("Depenses");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.NotesFrais", b =>
                {
                    b.Navigation("Depenses");

                    b.Navigation("DocumentsNoteFrais");

                    b.Navigation("FraisKilometriques");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.OrdreMission", b =>
                {
                    b.Navigation("NotesFrais");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.TypeDepense", b =>
                {
                    b.Navigation("Depenses");

                    b.Navigation("GroupeFraisDepense");
                });

            modelBuilder.Entity("NoteDeFrais.Domain.Entities.TypeOrdreMission", b =>
                {
                    b.Navigation("OrdreMission");
                });
#pragma warning restore 612, 618
        }
    }
}
