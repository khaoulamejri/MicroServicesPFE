// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParamGeneral.Data;

namespace ParamGeneral.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211029023852_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParamGeneral.Domain.Entities.AffectationEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("PositionID");

                    b.ToTable("affectationEmployee");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementAdresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviseIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("FiscalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaysIdConsumed")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeRegister")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("departements");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Devise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("Decimal")
                        .HasColumnType("int");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("devise");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("document");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Emploi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("emploi");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConsultantExterne")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDateCin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Langue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPersonne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceCin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanDroitCongeIDConsumed")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RecruitementDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RegimeTravailID")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelGSM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TitularizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidityDateRP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegimeTravailID");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.EmployeeVehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Marque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Plafond")
                        .HasColumnType("real");

                    b.Property<string>("PuissanceFiscale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TiTulaireCarteEssence")
                        .HasColumnType("bit");

                    b.Property<bool>("TiTulaireVehProf")
                        .HasColumnType("bit");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<string>("TypeVehicule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValiditeCarte")
                        .HasColumnType("datetime2");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employeeVehicules");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.HierarchyPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int>("PositionSupID")
                        .HasColumnType("int");

                    b.Property<int>("TypeHierarchyPositionID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionID");

                    b.HasIndex("TypeHierarchyPositionID");

                    b.ToTable("hierarchyPosition");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.ParamGeneraux", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AfficheJB")
                        .HasColumnType("bit");

                    b.Property<bool>("AfficheOU")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebutAnneeBonifiation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinAnneeBonifiation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Remplacant_autre_company")
                        .HasColumnType("bit");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Souche")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TpHierPosID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeekEnd1")
                        .HasColumnType("int");

                    b.Property<bool>("WeekEnd1_inclut")
                        .HasColumnType("bit");

                    b.Property<int>("WeekEnd2")
                        .HasColumnType("int");

                    b.Property<bool>("WeekEnd2_inclut")
                        .HasColumnType("bit");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TpHierPosID");

                    b.ToTable("paramGeneraux");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Pays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviseID")
                        .HasColumnType("int");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviseID");

                    b.ToTable("pay");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartementID")
                        .HasColumnType("int");

                    b.Property<int?>("EmploiID")
                        .HasColumnType("int");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniteID")
                        .HasColumnType("int");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartementID");

                    b.HasIndex("EmploiID");

                    b.HasIndex("UniteID");

                    b.ToTable("position");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.RegimeTravail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParamWeek")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("regimeTravail");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.TypeHierarchyPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("typeHierarchyPosition");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Unite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("unite");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.WFDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<string>("ActionComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AffectedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AffectedToId")
                        .HasColumnType("int");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<string>("Intitule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Ordre")
                        .HasColumnType("int");

                    b.Property<int?>("RemplacantId")
                        .HasColumnType("int");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("TypeDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserModif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AffectedToId");

                    b.HasIndex("RemplacantId");

                    b.HasIndex("RequestorId");

                    b.ToTable("wFDocuments");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.AffectationEmployee", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "Employee")
                        .WithMany("AffectationEmployee")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParamGeneral.Domain.Entities.Position", "Position")
                        .WithMany("AffectationEmployee")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Document", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "Employee")
                        .WithMany("Documents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Employee", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.RegimeTravail", "RegimeTravail")
                        .WithMany("Employee")
                        .HasForeignKey("RegimeTravailID");

                    b.Navigation("RegimeTravail");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.EmployeeVehicule", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeVehicule")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.HierarchyPosition", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Position", "Position")
                        .WithMany("HierarchyPosition")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParamGeneral.Domain.Entities.TypeHierarchyPosition", "TypeHierarchyPosition")
                        .WithMany("HierarchyPosition")
                        .HasForeignKey("TypeHierarchyPositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("TypeHierarchyPosition");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.ParamGeneraux", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.TypeHierarchyPosition", "TypeHierarchyPosition")
                        .WithMany("ParamGeneraux")
                        .HasForeignKey("TpHierPosID");

                    b.Navigation("TypeHierarchyPosition");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Pays", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Devise", "Devise")
                        .WithMany("Pays")
                        .HasForeignKey("DeviseID");

                    b.Navigation("Devise");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Position", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Departement", "Departement")
                        .WithMany("Position")
                        .HasForeignKey("DepartementID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ParamGeneral.Domain.Entities.Emploi", "Emploi")
                        .WithMany("Positions")
                        .HasForeignKey("EmploiID");

                    b.HasOne("ParamGeneral.Domain.Entities.Unite", "Unite")
                        .WithMany("Position")
                        .HasForeignKey("UniteID");

                    b.Navigation("Departement");

                    b.Navigation("Emploi");

                    b.Navigation("Unite");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.WFDocument", b =>
                {
                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "AffectedTo")
                        .WithMany("WFDocument")
                        .HasForeignKey("AffectedToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "Remplacant")
                        .WithMany("WFDocumentRemplacant")
                        .HasForeignKey("RemplacantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ParamGeneral.Domain.Entities.Employee", "Requestor")
                        .WithMany("WFDocumentReq")
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AffectedTo");

                    b.Navigation("Remplacant");

                    b.Navigation("Requestor");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Departement", b =>
                {
                    b.Navigation("Position");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Devise", b =>
                {
                    b.Navigation("Pays");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Emploi", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Employee", b =>
                {
                    b.Navigation("AffectationEmployee");

                    b.Navigation("Documents");

                    b.Navigation("EmployeeVehicule");

                    b.Navigation("WFDocument");

                    b.Navigation("WFDocumentRemplacant");

                    b.Navigation("WFDocumentReq");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Position", b =>
                {
                    b.Navigation("AffectationEmployee");

                    b.Navigation("HierarchyPosition");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.RegimeTravail", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.TypeHierarchyPosition", b =>
                {
                    b.Navigation("HierarchyPosition");

                    b.Navigation("ParamGeneraux");
                });

            modelBuilder.Entity("ParamGeneral.Domain.Entities.Unite", b =>
                {
                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
